# Spring Boot Configuration for User Service
# 基于系统设计文档中的配置架构

spring:
  application:
    name: user-service
  
  profiles:
    active: dev
  
  # 数据库配置
  datasource:
    url: jdbc:postgresql://localhost:5432/exam_system
    username: exam_user
    password: exam_password
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      leak-detection-threshold: 60000
  
  # JPA配置
  jpa:
    hibernate:
      ddl-auto: validate  # 生产环境使用validate，开发环境可使用update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
  
  # Redis配置（用于缓存和会话管理）
  data:
    redis:
      host: localhost
      port: 6379
      password: 
      timeout: 2000ms
      jedis:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
  
  # Jackson配置
  jackson:
    time-zone: Asia/Shanghai
    date-format: yyyy-MM-dd HH:mm:ss
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
  
  # 国际化配置
  messages:
    basename: messages
    encoding: UTF-8
  
  # 文件上传配置
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 100MB

# JWT配置
jwt:
  secret: exam-system-jwt-secret-key-2024-should-be-changed-in-production
  expiration: 3600000  # 1小时 (毫秒)
  refresh-expiration: 604800000  # 7天 (毫秒)
  issuer: exam-system

# 服务器配置
server:
  port: 8081
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
  tomcat:
    uri-encoding: UTF-8
    max-threads: 200
    min-spare-threads: 10

# 日志配置
logging:
  level:
    com.examSystem.userService: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n'
    file: '%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n'
  file:
    name: logs/user-service.log
    max-size: 100MB
    max-history: 30

# 管理端点配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when_authorized
  info:
    env:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# 应用信息
info:
  app:
    name: '@project.name@'
    description: '@project.description@'
    version: '@project.version@'
    encoding: '@project.build.sourceEncoding@'
    java:
      version: '@java.version@'

# 自定义配置
app:
  security:
    password-strength: 12  # BCrypt强度
    max-login-attempts: 5
    lockout-duration: 900  # 15分钟 (秒)
  
  session:
    timeout: 3600  # 1小时 (秒)
    max-concurrent: 3  # 用户最大并发会话数
  
  email:
    enabled: false  # 邮件功能开关
    verification-required: false  # 是否需要邮箱验证
  
  audit:
    enabled: true  # 审计日志开关
    retention-days: 90  # 审计日志保留天数

---
# 开发环境配置
spring:
  config:
    activate:
      on-profile: dev
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  
  h2:
    console:
      enabled: true

logging:
  level:
    root: INFO
    com.examSystem.userService: DEBUG

---
# 测试环境配置
spring:
  config:
    activate:
      on-profile: test
  
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect

---
# 生产环境配置
spring:
  config:
    activate:
      on-profile: prod
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false

logging:
  level:
    root: WARN
    com.examSystem.userService: INFO
  
server:
  tomcat:
    max-threads: 400

jwt:
  secret: ${JWT_SECRET:exam-system-production-secret-key-change-this}

app:
  email:
    enabled: true
    verification-required: true